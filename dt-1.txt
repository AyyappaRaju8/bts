Sum Right side

The program must accept N integers as the input. For each integer X among the N integers,
the program must print the sum of all the integers which are less than X and right to X as the
output. If there is no such integer on the right side of X then the program must print 0 as the
output.

Boundary Condition(s):
2 <=N <= 1000
1 <= Each integer value <= 1000

Input Format:
The first line contains N.
The second line contains N integers separated by a space.

Output Format:
The first line contains N integers separated by a space as per the given conditions.

Example Input/Output 1:
Input:

5

35241

Output:
37110

Explanation:

For the 15 integer, there are two values 2 and 1 which are less than 3 on its right. So their sum
is 3 which is printed as the output.

For the 2nd integer, there are three values 2 4 and 1 which are less than 5 on its right. So their
sum is 7 which is printed as the output.

For the 3d integer, there is only one value 1 which is less than 2 on its right. Here 1 is printed
as the output.

For the 4th integer, there is only one value 1 which is less than 4 on its right. Here 1 is printed
as the output.

For the 51 integer, there is no integer on its right. So 0 is printed as the output.

----------------------------------------------------------------------------------------------

import java.util.*;
public class hello{
	public static void main(String[] args){
		Scanner sc=new Scanner(System.in);
		int n=sc.nextInt();
		int[] arr=new int[n];
		for(int i=0;i<n;i++){
			arr[i]=sc.nextInt();
		}
		for(int i=0;i<n;i++){
			x=arr[i];
			int s=0;
			boolean false;
			for(int j=i+1;j<n;j++){
				if(arr[j]<x){
					s+=arr[j];
					f=true;
				}
			}
			if(f){
				System.out.print(s+" ");
			}else{
				System.out.print("0 ");
			}
		}
	}
}
